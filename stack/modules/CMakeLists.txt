#[[
Copyright (c) 2015-2021 University of Antwerp, Aloxy NV.

This file is part of Sub-IoT.
See https://github.com/Sub-IoT/Sub-IoT-Stack for further info.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
]]

include(${PROJECT_SOURCE_DIR}/cmake/module_macros.cmake)

SET(MODULE_EXTRA_MODULES_DIR "" CACHE STRING "Path to directory containing extra, out of tree modules (optional)")

#Export the 'binary' platform directory so the 'modules_defs.h' file
#generated by MODULES_BUILD_SETTINGS_FILE file can be found
EXPORT_GLOBAL_INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

#Add the 'BUILD_MODULES' option
OPTION(BUILD_MODULES "Build Modules" ON)
LIST_SUBDIRS(MODULE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})
IF(NOT(MODULE_EXTRA_MODULES_DIR STREQUAL ""))
    LIST_SUBDIRS(EXTRA_MODULES_DIRS ${MODULE_EXTRA_MODULES_DIR})
ENDIF()
LIST(APPEND MODULE_DIRS ${EXTRA_MODULES_DIRS})

#Add conditional options for all subdirs (which are individual modules)
FOREACH(__dir ${MODULE_DIRS})
    GET_FILENAME_COMPONENT(__module_name ${__dir} NAME) # strip full path keeping only module name
    STRING(TOUPPER ${__module_name} __upper_name)
    OPTION(MODULE_${__upper_name} "Build Module ${__module_name}" OFF)
    UNSET(__upper_name)
ENDFOREACH()

#Hide the parameters declared by the modules during the previous run
#Modules that are enabled will re-enable their parameters during declaration (eg by calling MODULE_PARAM)
HIDE_PARAMETERS(MODULE_PARAM_LIST)

# define the enabled modules in modules_defs.h
#FOREACH(__dir ${MODULE_DIRS})
#    GET_FILENAME_COMPONENT(__module_name ${__dir} NAME) # strip full path keeping only module name
#    GEN_PREFIX(MODULE_PREFIX "MODULE" ${__module_name})
#    IF(BUILD_MODULES AND ${MODULE_PREFIX})
#        STRING(TOUPPER ${__module_name} __upper_name)
#        MODULES_HEADER_DEFINE(BOOL MODULE_${__upper_name})
#    ENDIF()
#    UNSET(MODULE_PREFIX)
#ENDFOREACH()

#Finally Load the individual modules
FOREACH(__dir ${MODULE_DIRS})
    GET_FILENAME_COMPONENT(__module_name ${__dir} NAME) # strip full path keeping only module name
    GEN_PREFIX(MODULE_PREFIX "MODULE" ${__module_name})
    IF(BUILD_MODULES AND ${MODULE_PREFIX})
        ADD_SUBDIRECTORY(${__dir} ${CMAKE_CURRENT_BINARY_DIR}/modules/${__module_name})
        MESSAGE(STATUS "Added module " ${__module_name})
        STRING(TOUPPER ${__module_name} __upper_name)
        MODULES_HEADER_DEFINE(BOOL MODULE_${__upper_name})
    ENDIF()
    UNSET(MODULE_PREFIX)
ENDFOREACH()

MODULES_BUILD_SETTINGS_FILE()


